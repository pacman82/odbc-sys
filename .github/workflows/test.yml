name: Tests

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: ${{ matrix.features || 'dynamic' }} on ${{ matrix.target }}
    runs-on: ${{ contains(matrix.target, 'windows') && 'windows-latest' || contains(matrix.target, 'darwin') && 'macos-latest' || 'ubuntu-latest' }}

    strategy:
      matrix:
        target: ["x86_64-unknown-linux-gnu", "aarch64-apple-darwin"]
        features: ["", "iodbc", "vendored-unix-odbc"]
        include: # windows always links dynamically to the system's driver manager
          - target: "x86_64-pc-windows-msvc"
            features: ""
          - target: "i686-pc-windows-msvc"
            features: ""

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: "recursive"
      - if: ${{ contains(matrix.target, 'linux') && matrix.features == 'unixodbc' }}
        run: sudo apt-get update && sudo apt-get install -y unixodbc-dev
      - if: ${{ contains(matrix.target, 'linux') && matrix.features == 'iodbc' }}
        run: sudo apt-get update && sudo apt-get install -y libiodbc2-dev
      - if: ${{ contains(matrix.target, 'darwin') && matrix.features == 'unixodbc' }}
        run: brew install unixodbc
      - if: ${{ contains(matrix.target, 'darwin') && matrix.features == 'iodbc' }}
        run: brew install libiodbc
      - run: cargo clippy --all-targets --features "${{ matrix.features }}" -- -D warnings
      - run: cargo test -p odbc-sys --target "${{ matrix.target }}" --features "${{ matrix.features }}"